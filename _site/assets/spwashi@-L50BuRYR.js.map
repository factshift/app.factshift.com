{"version":3,"file":"spwashi@-L50BuRYR.js","sources":["../../src/_spwashi@/index.html?html-proxy&index=0.js"],"sourcesContent":["\n      import {app}                   from '../js'\n      import {processSpwInput}       from \"../js/modes/spw/process-spw-input\";\n      import {mapNodes, pushNode}    from \"../js/simulation/nodes/data/operate\";\n      import {boonConcept, boonNode} from \"../js/modes/spw/commands/boon\";\n      import {filterNodes}           from \"../js/simulation/nodes/data/set\";\n\n      app()\n\n      let i = 0;\n\n      function mainLoop(speed = 1000, {charge = 1000}) {\n        const nodeCount = 6;\n        const run       = (res = () => {}) => {\n          const locale    = 'en-US';\n          const dayName   = (new Date()).toLocaleDateString(locale, {weekday: 'long'});\n          const dayLen    = dayName.length;\n          const heightMod = dayLen;\n          pushNode({\n                     id:              i,\n                     r:               5,\n                     identity:        dayName.split('')[i % dayLen],\n                     collisionRadius: 100,\n                     text:            {\n                       fontSize: 50,\n                       fy:       100,\n                       color:    'white'\n                     },\n                     fx:              (((i % dayLen) / dayLen) * window.spwashi.parameters.width) + ((1 / (2 * dayLen)) * window.spwashi.parameters.width),\n                     fy:              window.spwashi.parameters.height * ((i % heightMod) / heightMod),\n                     y:               window.spwashi.parameters.height * ((i % heightMod) / heightMod),\n                     color:           'var(--bg-start)'\n                   })\n          // window.spwashi.reinit();\n          processSpwInput(\n            [\n              // `add=1`,\n              // `r=${50}`,\n              // `color=${(i % 2) + 1}`,\n              // 'arrange',\n              `charge=${charge}`\n            ].filter(Boolean)\n             .join('\\n')\n          );\n\n          res();\n          mainLoop(speed, {charge: -charge});\n          i += 1;\n        };\n        return (new Promise((res, rej) => {\n          setTimeout(() => run(res), speed);\n        })).then(() => {\n          if (i % nodeCount === 0) {\n            setTimeout(() => {\n              filterNodes((node) => node.kind !== '__boon');\n              mapNodes((node) => {\n                node.fy = undefined;\n              });\n              processSpwInput('bonk')\n            }, (speed * nodeCount * 2 / 3));\n          }\n          if (i % nodeCount === 0) {\n            // runClearCommand()\n            window.spwashi.boon(speed / 2, nodeCount).then(nodes => {\n              nodes.forEach(node => { node.fy += 50; });\n              window.spwashi.reinit();\n            });\n          }\n        })\n      }\n\n      boonConcept['@node'] = (index, batchSize) => {\n        const currentDayIndex = (new Date()).getDay();\n        return {\n          ...boonNode(index, batchSize),\n          color:     `var(--node-color-${currentDayIndex % 13})`,\n          callbacks: {\n            ondrag: (e, node) => {\n              const width  = window.spwashi.parameters.width;\n              const height = window.spwashi.parameters.height;\n              const r      = 255 * (node.x / width);\n              const y      = 255 * (node.y / height);\n              const b      = 255 * (node.x / width);\n\n              node.color = `rgb(${r}, ${y}, ${b})`;\n            }\n          }\n          // r: 10\n        };\n      }\n\n      setTimeout(() => {\n        processSpwInput(\n          [\n            // 'minimalism',\n            'box=0'\n            // 'velocityDecay=.4',\n          ].join('\\n')\n        );\n        mainLoop(300, {charge: 1000});\n      }, 1000);\n    "],"names":["app","i","mainLoop","speed","charge","run","res","locale","dayName","dayLen","heightMod","pushNode","processSpwInput","rej","filterNodes","node","mapNodes","nodes","boonConcept","index","batchSize","currentDayIndex","boonNode","e","width","height","r","y","b"],"mappings":"6EAOMA,EAAK,EAEL,IAAIC,EAAI,EAER,SAASC,EAASC,EAAQ,IAAM,CAAC,OAAAC,EAAS,GAAI,EAAG,CAE/C,MAAMC,EAAY,CAACC,EAAM,IAAM,KAAO,CACpC,MAAMC,EAAY,QACZC,EAAa,IAAI,OAAQ,mBAAmBD,EAAQ,CAAC,QAAS,MAAM,CAAC,EACrEE,EAAYD,EAAQ,OACpBE,EAAYD,EAClBE,EAAS,CACE,GAAiBV,EACjB,EAAiB,EACjB,SAAiBO,EAAQ,MAAM,EAAE,EAAEP,EAAIQ,CAAM,EAC7C,gBAAiB,IACjB,KAAiB,CACf,SAAU,GACV,GAAU,IACV,MAAU,OACX,EACD,GAAoBR,EAAIQ,EAAUA,EAAU,OAAO,QAAQ,WAAW,MAAW,GAAK,EAAIA,GAAW,OAAO,QAAQ,WAAW,MAC/H,GAAiB,OAAO,QAAQ,WAAW,QAAWR,EAAIS,EAAaA,GACvE,EAAiB,OAAO,QAAQ,WAAW,QAAWT,EAAIS,EAAaA,GACvE,MAAiB,iBACtC,CAAoB,EAEVE,EACE,CAKE,UAAUR,CAAM,EAC9B,EAAc,OAAO,OAAO,EACd,KAAK;AAAA,CAAI,CACvB,EAEUE,IACAJ,EAASC,EAAO,CAAC,OAAQ,CAACC,CAAM,CAAC,EACjCH,GAAK,CACf,EACQ,OAAQ,IAAI,QAAQ,CAACK,EAAKO,IAAQ,CAChC,WAAW,IAAMR,EAAIC,CAAG,EAAGH,CAAK,CAC1C,CAAS,EAAG,KAAK,IAAM,CACTF,EAAI,IAAc,GACpB,WAAW,IAAM,CACfa,EAAaC,GAASA,EAAK,OAAS,QAAQ,EAC5CC,EAAUD,GAAS,CACjBA,EAAK,GAAK,MAC1B,CAAe,EACDH,EAAgB,MAAM,CACvB,EAAGT,EAAQ,EAAY,EAAI,CAAC,EAE3BF,EAAI,IAAc,GAEpB,OAAO,QAAQ,KAAKE,EAAQ,EAAG,CAAS,EAAE,KAAKc,GAAS,CACtDA,EAAM,QAAQF,GAAQ,CAAEA,EAAK,IAAM,EAAG,CAAE,EACxC,OAAO,QAAQ,QAC7B,CAAa,CAEb,CAAS,CACF,CAEDG,EAAY,OAAO,EAAI,CAACC,EAAOC,IAAc,CAC3C,MAAMC,EAAmB,IAAI,KAAM,EAAE,OAAM,EAC3C,MAAO,CACL,GAAGC,EAASH,EAAOC,CAAS,EAC5B,MAAW,oBAAoBC,EAAkB,EAAE,IACnD,UAAW,CACT,OAAQ,CAACE,EAAGR,IAAS,CACnB,MAAMS,EAAS,OAAO,QAAQ,WAAW,MACnCC,EAAS,OAAO,QAAQ,WAAW,OACnCC,EAAS,KAAOX,EAAK,EAAIS,GACzBG,EAAS,KAAOZ,EAAK,EAAIU,GACzBG,EAAS,KAAOb,EAAK,EAAIS,GAE/BT,EAAK,MAAQ,OAAOW,CAAC,KAAKC,CAAC,KAAKC,CAAC,GAClC,CACF,CAEX,CACO,EAED,WAAW,IAAM,CACfhB,EACE,CAEE,OAEZ,EAAY,KAAK;AAAA,CAAI,CACrB,EACQV,EAAS,IAAK,CAAC,OAAQ,GAAI,CAAC,CAC7B,EAAE,GAAI"}