:root {
    --html-background: #818181;
    --body-background: #95b6b6;
    --form-background: #222222;
    --quickaction-background: #222222;
    --quickaction-text-color: wheat;

    --body-outline: wheat;

    --has-focus-outline: green;
    --is-focus-outline: yellow;


    --link-stroke-color: black;

    --node-input-container-background: #222222;
    --show-keystroke-options-background: #222222;
    --keystroke-options-hover-background: #333333;
    --keystroke-options-border: #222222;
    --spw-container-text-color: white;
}

html {
    font-family: monospace;
    background: var(--html-background);
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
}
body {
    outline: thin solid var(--body-outline);
    margin: 0;
    padding: 0;
    background: var(--body-background);
}
main {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
}
form {
    display: flex;
    flex-direction: column;
    padding: 2rem 0;
    background: var(--form-background);
}
body > aside {
    position: absolute;
    bottom: 0;
    left: 0;
    background: var(--quickaction-background);
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: var(--quickaction-text-color);
    border: thin solid var(--body-outline);
}
body > aside > * {
    /*padding: 1rem;*/
}
label {
    display: flex;
    flex-direction: column;
    text-align: center;
    cursor: pointer;
    padding-bottom: .5rem;
    color: var(--spw-container-text-color);
    font-weight: bold;
}
label span {
    padding: 1rem;
}
label input[type=checkbox] {
    cursor: pointer;
    margin-bottom: 1rem;
}
svg {
    display: block;
    overflow: visible;
}
line {
    stroke: var(--link-stroke-color);
}
text {
    user-select: none;
    font-family: monospace;
    white-space: pre;
}

aside :is(:focus) {
    outline: thin solid var(--is-focus-outline);
}
aside > section :has(:focus) {
    outline: thin solid var(--has-focus-outline);
}


#node-input-container {
    display: flex;
    flex-direction: column;
    z-index: 1;
    background: var(--node-input-container-background);
    color: var(--quickaction-text-color);
}
#node-input-container button {
    padding: .5rem;
    margin: .5rem 0;
}
#controls {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
#controls label {
    color: var(--quickaction-text-color);
    font-weight: bold;
}
#controls .button-container {
    display: flex;
    flex-direction: column;
}
#controls button {
    padding: .5rem;
    font-size: 2rem;
    font-family: monospace;
}

#quickaction-container {
    display: flex;
}
#main-log {
    position: absolute;
    top: 0;
    right: 0;
}

/* Mode Containers */
#spw-mode-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
#spw-container {
    display: none;
    flex-direction: column;
    color: var(--spw-container-text-color);
}
#spw-parse-field {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 13rem;
    font-size: 2rem;
    overflow: visible;
    width: 50vw;
}
#color-mode-container {
    display: none;
}
#colors {
    margin: 1rem;
    border: thin solid var(--body-outline);
}
#colors .color {
    width: 5rem;
    height: 5rem;
}
#reflex-mode-container {
    display: none;
}
#reflexes {
    margin: 1rem;
    border: thin solid var(--body-outline);
    display: flex;
    flex-direction: column;
}
#reflexes > section {
    display: flex;
    flex-direction: row;
}
#querymod-mode-container {
    display: none;
}
#node-mode-container {
    display: none;
}
#debug-mode-container {
    display: none;
}
#output {
    white-space: pre;
}
#map-mode-container {
    display: none;
}
#filter-mode-container {
    display: none;
}

:is(#color-mode-container) :is(:hover, :focus) {
    border: thin solid var(--body-outline);
    background: var(--quickaction-background);
    color: var(--quickaction-text-color);
}
:is(#reflex-mode-container) button {
    cursor: pointer;
    font-size: 1rem;
    padding: 1rem;
    margin: .5rem;
    border: thin solid transparent;;
    font-family: monospace;
}


[data-displaymode=nodes] :is(.rects, text, #show-keystroke-options, line) {
    display: none;
}
[data-displaymode=words] :is(.rects, .nodes :is(circle, rect), line) {
    display: none;
}
[data-displaymode=edges] :is(.rects, .nodes :is(circle, rect), text) {
    display: none;
}

/* Mode Containers: in use */
[data-mode=debug] #debug-mode-container {
    display: flex;
}
[data-mode=debug] #debug-mode-container {
    display: flex;
}
[data-mode=color] #color-mode-container {
    display: flex;
}
[data-mode=reflex] #reflex-mode-container {
    display: flex;
}
[data-mode=query] #querymod-mode-container {
    display: flex;
}
[data-mode=node] #node-mode-container {
    display: flex;
}
[data-mode=spw] :is(#spw-container) {
    display: flex;
}
[data-mode=map] #map-mode-container,
[data-mode=filter] #filter-mode-container {
    display: flex;
}

#show-keystroke-options + #keystroke-options,
#quickaction-container > label ~ #mode-container {
    display: none;
}
#quickaction-container > :is(label:has(:checked ), select:is(:focus)) ~ #mode-container {
    display: flex;
    position: absolute;
    bottom: 100%;
    left: 0;
}
#show-keystroke-options:has(:checked) + #keystroke-options,
#quickaction-container > label:has(:checked) + select {
    display: flex;
    position: absolute;
    bottom: 0;
    left: 100%;
}
:is(#show-keystroke-options, #quickaction-container > label) > [type=checkbox] {
}
#show-keystroke-options, #quickaction-container > label {
    display: inline-flex;
    flex-direction: column;
    z-index: 1;
    padding: 1rem;
    color: var(--quickaction-text-color);
    cursor: pointer;
    background: var(--show-keystroke-options-background);
    border: thin solid var(--keystroke-options-border);
}
#show-keystroke-options input {
    display: inline-flex;
}
#hotkey-container, #quickaction-container {
    display: flex;
    align-items: end;
}
#keystroke-options {
    padding: 0 2rem 1rem;
}
#keystroke-options ul {
    list-style: none;
    padding: 0;
}
#keystroke-options li kbd {
    flex: 0 1;
}
#keystroke-options li span {
    flex: 1 0;
}
#keystroke-options li :is(span, kbd) {
}
#keystroke-options li {
    overflow: hidden;
    white-space: pre;
    display: flex;
    flex-direction: row;
    cursor: pointer;
    padding: .5rem;
}
#keystroke-options li:focus, #keystroke-options li:hover {
    background: var(--keystroke-options-hover-background);
}
#keystroke-options kbd:before {
    content: '';
}
#keystroke-options kbd strong {
    color: white;
}
#keystroke-options kbd {
    padding-left: 1rem;
    margin-left: 1rem;
    color: #777777;
    border-left: thin solid var(--body-outline);
}
#keystroke-options kbd:after {
    content: '';
}

.editor-wrapper {
    display: flex;
    flex-direction: column;
    position: relative;
    padding: 1rem;
    margin: 1rem;
}
.code-editor {
    width: 20rem;
    padding: 1rem;
    height: 5rem;
}

@media (max-width: 600px) {
    kbd {
        display: none;
    }
}